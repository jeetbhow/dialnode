name: Build (Electron + electron-vite)

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch || 'x64' }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            builder_args: "--linux"
          - os: windows-latest
            builder_args: "--win"
          - os: macos-13
            builder_args: "--mac --x64"
            arch: x64
          - os: macos-14
            builder_args: "--mac --arm64"
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Electron downloads
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-

      - name: Lint
        run: npm run lint

      - name: Type check (TS + Svelte)
        run: npm run typecheck

      - name: Build and bundle with electron-vite
        run: npm run build

      - name: Package with electron-builder
        run: npx electron-builder ${{ matrix.builder_args }} --publish=never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.arch || 'x64' }}-artifacts
          path: |
            dist/*.dmg
            dist/*.pkg
            dist/*.zip
            dist/*.exe
            dist/*.msi
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.snap
            dist/*.blockmap
          if-no-files-found: ignore

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release and upload files
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: "dist/**/*"
